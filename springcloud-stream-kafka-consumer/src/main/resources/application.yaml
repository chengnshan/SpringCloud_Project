server:
  port:
  servlet:
    context-path: /stream-kafka-consumer
spring:
  cloud:
    stream:
      default-binder: kafka
      binders:
        mykafka:
          type: kafka
          environment:
            spring:
              kafka:
                bootstrap-servers: 192.168.153.136:9092
                consumer:
                  # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
                  enable-auto-commit: true
                  # 自动提交的时间间隔,默认值为5000,值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
                  auto-commit-interval: 1S
                  # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
                  # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
                  # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
                  # none：如果边更早的offset也没有的话，就抛出异常给consumer，告诉consumer在整个consumer group中都没有发现有这样的offset。
                  auto-offset-reset: earliest
                  # 键的反序列化方式
                  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
                  # 值的反序列化方式
                  value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
                  #如果没有足够的数据立即满足“fetch.min.bytes”给出的要求，服务器在回答获取请求之前将阻塞的最长时间（以毫秒为单位）
                  #默认值为500
                  fetch-max-wait: 500ms
                  #服务器应以字节为单位返回获取请求的最小数据量，默认值为1，对应的kafka的参数为fetch.min.bytes
                  fetch-min-size: 1
                  #心跳与消费者协调员之间的预期时间（以毫秒为单位），默认值为3000
                  heartbeat-interval: 3000ms
                  #一次调用poll()操作时返回的最大记录数，默认值为500
                  maxPollRecords: 500
      bindings:
        input:
          destination: stream-kafka-one
          group: stream-one
          contentType: application/json
          binder: mykafka
          consumer:
            autoStartup: true
            concurrency: 2
            partitioned: true
            instanceCount: 1
            instanceIndex: -1
            maxAttempts: 3
            backOffInitialInterval: 1000
            backOffMaxInterval: 10000
            backOffMultiplier: 2
      kafka:
        bindings:
          input:
            consumer:
              #默认为:true,是否在处理消息完成后自动提交偏移量。
              autoCommitOffset: true
              #如果为true，则主题（topic）分区将在消费者组的成员之间自动重新平衡。 如果为false，则会根据spring.cloud.stream.instanceCount
              #和spring.cloud.stream.instanceIndex为每个使用者分配一组固定的分区
              autoRebalanceEnabled: true
              #尝试恢复连接的间隔，以毫秒为单位,默认为：5000
              recoveryInterval: 5000
              #默认为：false。是否将消费者的偏移量重置为startOffset提供的值
              resetOffsets: false

